{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","handleFormChange","e","defineProperty","target","onSubmit","_this$state","newContact","response","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","About","NotFound","App","context_Provider","basename","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ee78051.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({\n      contacts: res.data\n    });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      marginRight: \"1rem\",\n                      color: \"black\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul>\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        error={error}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n//import uuid from \"uuid\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  handleFormChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is required!\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is required!\" }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is required!\" }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const response = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: response.data });\n\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"enter name...\"\n                    value={name}\n                    onChange={this.handleFormChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"enter email...\"\n                    value={email}\n                    onChange={this.handleFormChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"enter phone...\"\n                    value={phone}\n                    onChange={this.handleFormChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-dark btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n//import uuid from \"uuid\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  handleFormChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const { name, email, phone } = res.data;\n\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is required!\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is required!\" }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is required!\" }\n      });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const response = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: response.data });\n\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"enter name...\"\n                    value={name}\n                    onChange={this.handleFormChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"enter email...\"\n                    value={email}\n                    onChange={this.handleFormChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"enter phone...\"\n                    value={phone}\n                    onChange={this.handleFormChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-dark btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  const { branding } = props;\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            {branding}\n          </Link>\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  <small>\n                    <i className=\"fas fa-home mr-1\" />\n                  </small>\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/contact/add\" className=\"nav-link\">\n                  <small>\n                    <i className=\"fas fa-plus mr-1\" />\n                  </small>\n                  Add Contact\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                  <small>\n                    <i className=\"fas fa-info mr-1\" />\n                  </small>\n                  About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div>\n      <div className=\"display-4\">About Contact Manager</div>\n      <div className=\"lead\">Simple app to manage contacts</div>\n      <div className=\"text-secondary\">Version 1.0.0</div>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <div className=\"display-4\">404 Not Found</div>\n      <div className=\"lead\">The page you're looking for does not exist!</div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\"; //destructuring\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context.js\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename=\"/\">\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}